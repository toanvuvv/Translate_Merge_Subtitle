1
00:00:01,270 --> 00:00:04,520
<v Trình tường thuật>Bây giờ trước khi đi sâu vào một số mã NodeJS,</v>

2
00:00:04,520 --> 00:00:06,700
chúng ta hãy làm một cái nhìn tổng quan cấp cao

3
00:00:06,700 --> 00:00:08,990
về việc NodeJS thực sự là gì,

4
00:00:08,990 --> 00:00:11,800
chúng tôi sử dụng nó để làm gì và tại sao chúng tôi sử dụng Node

5
00:00:11,800 --> 00:00:13,843
thay vì các công nghệ khác.

6
00:00:15,410 --> 00:00:17,570
Vì vậy, định nghĩa chính thức là

7
00:00:17,570 --> 00:00:19,480
NodeJS là Thời gian chạy JavaScript

8
00:00:19,480 --> 00:00:23,783
được xây dựng trên công cụ JavaScript V8 mã nguồn mở của Google.

9
00:00:23,783 --> 00:00:26,279
Bây giờ, điều đó thực sự có nghĩa là gì?

10
00:00:26,279 --> 00:00:29,289
Nào, hãy bắt đầu bằng cách cố gắng hiểu

11
00:00:29,289 --> 00:00:31,174
Thời gian chạy JavaScript là gì

12
00:00:31,174 --> 00:00:33,913
và thực tế là động cơ V8.

13
00:00:35,190 --> 00:00:37,914
Vì vậy, có thể bạn đã từng sử dụng JavaScript trước đây

14
00:00:37,914 --> 00:00:42,120
và có lẽ nó luôn ở bên trong trình duyệt, phải không?

15
00:00:42,120 --> 00:00:45,400
Bởi vì bất kỳ trình duyệt nào cũng có thể hiểu được

16
00:00:45,400 --> 00:00:49,250
HTML, CSS và JavaScript và bất kể thứ gì

17
00:00:49,250 --> 00:00:51,760
nếu bạn viết JavaScript vanilla hoặc một số

18
00:00:51,760 --> 00:00:54,713
Khung JavaScript như mã React hoặc Angular,

19
00:00:54,713 --> 00:00:56,370
tất cả chỉ là JavaScript

20
00:00:56,370 --> 00:00:59,920
được thực thi ngay trong trình duyệt.

21
00:00:59,920 --> 00:01:01,500
Vì vậy, trong trường hợp này, trình duyệt

22
00:01:01,500 --> 00:01:03,454
sau đó là Thời gian chạy JavaScript.

23
00:01:03,454 --> 00:01:06,110
Nhưng, điều gì sẽ xảy ra nếu chúng ta có thể sử dụng JavaScript

24
00:01:06,110 --> 00:01:08,311
ra khỏi trình duyệt và chỉ cần thực hiện

25
00:01:08,311 --> 00:01:10,988
hoặc mã JavaScript ở một nơi khác mà không có

26
00:01:10,988 --> 00:01:14,860
tất cả những hạn chế mà chúng tôi có trong trình duyệt?

27
00:01:14,860 --> 00:01:17,580
Chà, hóa ra là chúng ta thực sự có thể.

28
00:01:17,580 --> 00:01:19,955
Và giải pháp cho việc này, như bạn có thể đoán,

29
00:01:19,955 --> 00:01:23,425
được gọi là NodeJS và vì vậy Node JS

30
00:01:23,425 --> 00:01:25,830
chỉ là một Thời gian chạy JavaScript khác.

31
00:01:25,830 --> 00:01:29,252
Nó giống như một vật chứa, như một môi trường,

32
00:01:29,252 --> 00:01:32,010
trong đó một chương trình được viết bằng JavaScript

33
00:01:32,010 --> 00:01:37,010
có thể được thực thi, nhưng bên ngoài bất kỳ trình duyệt nào.

34
00:01:37,230 --> 00:01:39,850
Được rồi, nó thực sự phức tạp hơn một chút

35
00:01:39,850 --> 00:01:42,908
tất nhiên là hơn thế này, nhưng hiện tại thì thế là đủ rồi.

36
00:01:42,908 --> 00:01:45,380
Bây giờ, ai thực sự thực thi

37
00:01:45,380 --> 00:01:47,438
mã nếu không phải là trình duyệt?

38
00:01:47,438 --> 00:01:50,070
Và đó là nơi động cơ V8

39
00:01:50,070 --> 00:01:52,770
do Google phát triển sẽ phát huy tác dụng.

40
00:01:52,770 --> 00:01:55,420
Bởi vì đó chính xác là nơi mã JavaScript

41
00:01:55,420 --> 00:01:59,800
sẽ được phân tích cú pháp và chạy trong NodeJS, được chứ?

42
00:01:59,800 --> 00:02:02,819
Vì vậy, tôi hy vọng rằng bây giờ định nghĩa về NodeJS

43
00:02:02,819 --> 00:02:07,116
là Thời gian chạy JavaScript trên công cụ JavaScript V8

44
00:02:07,116 --> 00:02:10,104
có ý nghĩa hơn nhiều và một lần nữa,

45
00:02:10,104 --> 00:02:12,742
đây chỉ là một cái nhìn tổng quan ở cấp độ rất cao

46
00:02:12,742 --> 00:02:16,060
Node là gì và nó hoạt động như thế nào.

47
00:02:16,060 --> 00:02:18,430
Chúng ta sẽ đi vào rất nhiều chi tiết

48
00:02:18,430 --> 00:02:20,926
về cách Node thực sự hoạt động đằng sau hậu trường

49
00:02:20,926 --> 00:02:23,860
ngay trong phần tiếp theo, nhưng tại thời điểm này,

50
00:02:23,860 --> 00:02:26,152
Tôi chỉ muốn bạn có được một cái nhìn tổng quan nhanh chóng

51
00:02:26,152 --> 00:02:28,810
để bạn có thể bắt đầu học những kiến ​​thức cơ bản

52
00:02:28,810 --> 00:02:32,203
của NodeJS trong thực tế xuyên suốt phần này.

53
00:02:34,000 --> 00:02:36,230
Dù sao thì bây giờ chúng ta đã có JavaScript

54
00:02:36,230 --> 00:02:38,400
bên ngoài trình duyệt theo kiểu

55
00:02:38,400 --> 00:02:40,704
môi trường độc lập chỉ có NodeJS,

56
00:02:40,704 --> 00:02:44,058
chúng ta có thể làm được nhiều thứ hơn nữa với JavaScript

57
00:02:44,058 --> 00:02:46,690
điều đó hoàn toàn không thể trước đây

58
00:02:46,690 --> 00:02:48,254
như truy cập vào hệ thống tập tin,

59
00:02:48,254 --> 00:02:50,515
hoặc khả năng kết nối mạng tốt hơn

60
00:02:50,515 --> 00:02:53,054
không thể thực hiện được với NodeJS

61
00:02:53,054 --> 00:02:55,630
và tất cả những yếu tố này cùng nhau cho chúng ta

62
00:02:55,630 --> 00:02:59,750
điều kiện hoàn hảo để sử dụng NodeJS làm máy chủ web

63
00:02:59,750 --> 00:03:02,327
nghĩa là bây giờ chúng ta cuối cùng cũng có thể sử dụng JavaScript

64
00:03:02,327 --> 00:03:05,550
về phía máy chủ của phát triển web

65
00:03:05,550 --> 00:03:08,020
để xây dựng nhanh chóng, có khả năng mở rộng cao

66
00:03:08,020 --> 00:03:10,810
các ứng dụng mạng để cấp nguồn cho back-end

67
00:03:10,810 --> 00:03:13,540
tất cả cho các trang web hoặc ứng dụng web.

68
00:03:13,540 --> 00:03:15,990
Và điều này hoàn toàn tuyệt vời

69
00:03:15,990 --> 00:03:19,030
và thay đổi trò chơi để phát triển web.

70
00:03:19,030 --> 00:03:22,103
Vì vậy, bây giờ chúng ta hãy xem xét một số trường hợp sử dụng Node

71
00:03:22,103 --> 00:03:25,703
và tại sao nó lại rất phù hợp cho việc phát triển back-end.

72
00:03:27,010 --> 00:03:29,430
Và điều đầu tiên chúng ta cần nói đến

73
00:03:29,430 --> 00:03:31,060
thực tế là các ứng dụng Node

74
00:03:31,060 --> 00:03:34,603
rất nhanh và có thể mở rộng nhờ NodeJS

75
00:03:34,603 --> 00:03:36,705
là một luồng dựa trên

76
00:03:36,705 --> 00:03:40,110
một mô hình I/O không chặn, hướng sự kiện

77
00:03:40,110 --> 00:03:43,932
điều này làm cho NodeJS rất nhẹ và hiệu quả.

78
00:03:43,932 --> 00:03:47,140
Tất nhiên, điều đó nghe có vẻ cực kỳ phức tạp,

79
00:03:47,140 --> 00:03:50,040
Tôi biết, nhưng một lần nữa chúng ta sẽ nói về

80
00:03:50,040 --> 00:03:52,146
chính xác tất cả những điều này có nghĩa là gì

81
00:03:52,146 --> 00:03:54,110
một chút muộn trong khóa học.

82
00:03:54,110 --> 00:03:56,250
Nhưng bây giờ, hãy nhớ rằng

83
00:03:56,250 --> 00:03:59,052
Node đó hoàn hảo để xây dựng siêu nhanh,

84
00:03:59,052 --> 00:04:02,910
và các ứng dụng web sử dụng nhiều dữ liệu có thể mở rộng.

85
00:04:02,910 --> 00:04:06,280
Và điều đó làm cho NodeJS hoàn toàn phù hợp để xây dựng

86
00:04:06,280 --> 00:04:08,580
tất cả các loại ứng dụng khác nhau như

87
00:04:08,580 --> 00:04:11,830
xây dựng một API với cơ sở dữ liệu đằng sau nó

88
00:04:11,830 --> 00:04:16,830
và tốt nhất là cơ sở dữ liệu NoSQL không quan hệ như MongoDB

89
00:04:17,090 --> 00:04:20,250
và đây thực sự chính xác là những gì chúng ta sẽ làm sau này

90
00:04:20,250 --> 00:04:24,568
trong khóa học này khi chúng ta ngày càng đi sâu hơn vào NodeJS.

91
00:04:24,568 --> 00:04:27,350
Tuy nhiên, tất nhiên là có tất cả các loại ứng dụng khác

92
00:04:27,350 --> 00:04:30,007
mà chúng tôi có thể xây dựng giống như các ứng dụng truyền dữ liệu

93
00:04:30,007 --> 00:04:33,739
chẳng hạn như YouTube hoặc Netflix, ứng dụng trò chuyện thời gian thực,

94
00:04:33,739 --> 00:04:36,600
hoặc thậm chí các ứng dụng web phía máy chủ

95
00:04:36,600 --> 00:04:39,430
nơi toàn bộ nội dung được tạo đơn giản

96
00:04:39,430 --> 00:04:42,055
ngay trên máy chủ, như bạn thấy,

97
00:04:42,055 --> 00:04:44,684
Những khả năng là vô tận.

98
00:04:44,684 --> 00:04:47,650
Tuy nhiên, thực tế cũng có một loại ứng dụng

99
00:04:47,650 --> 00:04:49,990
rằng chúng ta không nên xây dựng bằng Node.

100
00:04:49,990 --> 00:04:51,890
Và đây là lúc ứng dụng của chúng ta cần

101
00:04:51,890 --> 00:04:54,380
một số xử lý phía máy chủ siêu nặng

102
00:04:54,380 --> 00:04:57,750
như thao tác hình ảnh, chuyển đổi video,

103
00:04:57,750 --> 00:05:01,270
nén tập tin hoặc bất cứ thứ gì tương tự, được rồi.

104
00:05:01,270 --> 00:05:04,930
Và bạn sẽ biết tại sao lại như vậy khi chúng ta tìm hiểu sâu hơn

105
00:05:04,930 --> 00:05:07,410
vào cách Node thực sự hoạt động.

106
00:05:07,410 --> 00:05:09,500
Vì vậy, trong trường hợp này, tốt hơn hết là chúng ta nên

107
00:05:09,500 --> 00:05:14,010
sử dụng thứ gì đó như Ruby on Rails, PHP hoặc Python.

108
00:05:14,010 --> 00:05:16,460
Bởi vì NodeJS chưa được phát triển

109
00:05:16,460 --> 00:05:19,910
cho những trường hợp sử dụng này và mặc dù có những giải pháp

110
00:05:19,910 --> 00:05:22,480
để đối phó với chúng, chúng ta nên luôn luôn sử dụng

111
00:05:22,480 --> 00:05:25,157
công cụ phù hợp cho nhiệm vụ trước mắt.

112
00:05:25,157 --> 00:05:28,361
Được rồi, đây là những loại ứng dụng

113
00:05:28,361 --> 00:05:31,977
mà chúng ta có thể và không thể xây dựng bằng NodeJS.

114
00:05:31,977 --> 00:05:34,780
Và nếu bạn chọn sử dụng Node,

115
00:05:34,780 --> 00:05:37,540
tốt, vậy thì bạn đang ở trong một công ty tốt bởi vì

116
00:05:37,540 --> 00:05:41,206
nhiều công ty hàng đầu như Netflix, Uber, PayPal,

117
00:05:41,206 --> 00:05:45,140
Ebay và nhiều trang khác đã bắt đầu sử dụng

118
00:05:45,140 --> 00:05:48,910
NodeJS thực sự chứng minh rằng công nghệ

119
00:05:48,910 --> 00:05:52,850
tại thời điểm này đủ ổn định để sử dụng trong sản xuất.

120
00:05:52,850 --> 00:05:56,125
Tất nhiên bây giờ có nhiều lý do hơn để sử dụng Node,

121
00:05:56,125 --> 00:05:59,040
và cái lớn nhất có lẽ là việc sử dụng

122
00:05:59,040 --> 00:06:01,650
cùng một ngôn ngữ trên toàn bộ ngăn xếp của bạn

123
00:06:01,650 --> 00:06:03,758
cả ở mặt trước và mặt sau

124
00:06:03,758 --> 00:06:07,420
sẽ dễ dàng hơn rất nhiều cho bạn hoặc cho nhóm của bạn.

125
00:06:07,420 --> 00:06:09,010
Đầu tiên, bạn không cần phải học

126
00:06:09,010 --> 00:06:11,070
một ngôn ngữ lập trình mới để xây dựng

127
00:06:11,070 --> 00:06:13,580
back-end của bạn và ngoài ra, bạn không cần phải

128
00:06:13,580 --> 00:06:15,824
tiếp tục chuyển đổi qua lại giữa ngôn ngữ

129
00:06:15,824 --> 00:06:18,450
điều này sẽ làm cho toàn bộ quá trình xây dựng

130
00:06:18,450 --> 00:06:20,533
nhanh hơn và hiệu quả hơn.

131
00:06:20,533 --> 00:06:23,107
Tin tôi đi, nó thực sự rất tuyệt vời

132
00:06:23,107 --> 00:06:26,230
có thể sử dụng JavaScript để xây dựng

133
00:06:26,230 --> 00:06:29,215
toàn bộ ứng dụng của bạn từ đầu đến cuối.

134
00:06:29,215 --> 00:06:31,727
Nó thực sự tuyệt vời.

135
00:06:31,727 --> 00:06:34,150
Và một lý do tuyệt vời khác để sử dụng Node

136
00:06:34,150 --> 00:06:38,502
là có một thư viện khổng lồ các gói nguồn mở

137
00:06:38,502 --> 00:06:41,450
hoặc mô-đun, như chúng ta cũng có thể gọi chúng,

138
00:06:41,450 --> 00:06:43,884
có sẵn miễn phí cho mọi người.

139
00:06:43,884 --> 00:06:47,190
Nó được gọi là NPM và có thể bạn đã từng nghe đến nó

140
00:06:47,190 --> 00:06:48,976
hoặc thậm chí đã sử dụng nó rồi.

141
00:06:48,976 --> 00:06:51,170
Và tất nhiên, chúng ta cũng sẽ bắt đầu

142
00:06:51,170 --> 00:06:53,563
sử dụng các gói ngay trong phần.

143
00:06:54,430 --> 00:06:56,920
Và cuối cùng, cũng thật tốt khi biết

144
00:06:56,920 --> 00:06:59,420
rằng có một cộng đồng năng động rất lớn

145
00:06:59,420 --> 00:07:02,020
của các nhà phát triển Node ngoài kia liên tục

146
00:07:02,020 --> 00:07:05,650
cải thiện NodeJS và giúp đỡ những người mới bắt đầu như bạn.

147
00:07:05,650 --> 00:07:08,670
Và, vì vậy bạn có thể thực sự tin cậy vào công nghệ

148
00:07:08,670 --> 00:07:11,929
cho tất cả các dự án của bạn trong những năm tới.

149
00:07:11,929 --> 00:07:15,343
Được rồi, đó là phần giới thiệu rất ngắn gọn

150
00:07:15,343 --> 00:07:20,040
và tổng quan về NodeJS cũng như một số trường hợp sử dụng của nó.

151
00:07:20,040 --> 00:07:21,920
Vì vậy, trong phần còn lại của phần này,

152
00:07:21,920 --> 00:07:23,810
bây giờ chúng ta sẽ sử dụng Node để tạo

153
00:07:23,810 --> 00:07:25,950
một máy chủ web rất đơn giản và xây dựng

154
00:07:25,950 --> 00:07:28,750
một API cực kỳ đơn giản, do đó

155
00:07:28,750 --> 00:07:30,160
bạn có thể làm quen với

156
00:07:30,160 --> 00:07:32,763
các nguyên tắc cơ bản của phát triển Node.

